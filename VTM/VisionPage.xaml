<Page x:Class="VTM.VisionPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:VTM" xmlns:cc="clr-namespace:Camera;assembly=Camera"
      xmlns:ctr="clr-namespace:HVT.Controls;assembly=HVT.Controls"
      mc:Ignorable="d" d:Width="1800" d:Height="1000"
      Title="VisionPage" >
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/CSS/FlatStyle.xaml">
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Page.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Border Grid.Column="0" Grid.Row="0" Background="#222222" Margin="5,5,-2,5" VerticalAlignment="Stretch" HorizontalAlignment="Left"  CornerRadius="0,0,0,0">
            <Grid Margin="3,3,3,3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Label Content="CAMERA VIEWER" VerticalAlignment="Top" HorizontalAlignment="Left"
                    Foreground="WhiteSmoke" FontWeight="Bold" FontSize="12" />
                <ToggleButton x:Name="tgbSwitchCalib" Template="{StaticResource ToggleButtonSwitchContent}" Width="100" Margin="0,0,300,0" HorizontalAlignment="Right" Height="30" Foreground="White"
                              VerticalContentAlignment="Center">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton">
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Content" Value="Funtions"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="Content" Value="Grid"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="5">
                    <ToggleButton x:Name="tgbSelectA" Content="A" IsChecked="True" Template="{StaticResource ToggleButtonVertical}" Margin="50,0,0,0" HorizontalAlignment="Right"  Foreground="White" Click="BoardSellect_Click"
                              VerticalContentAlignment="Center">
                    </ToggleButton>
                    <ToggleButton x:Name="tgbSelectB" Content="B" Template="{StaticResource ToggleButtonVertical}" Margin="0,0,0,0" HorizontalAlignment="Right"  Foreground="White" Click="BoardSellect_Click"
                              VerticalContentAlignment="Center">
                    </ToggleButton>
                    <ToggleButton x:Name="tgbSelectC" Content="C" Template="{StaticResource ToggleButtonVertical}" Margin="0,0,0,0" HorizontalAlignment="Right"  Foreground="White" Click="BoardSellect_Click"
                              VerticalContentAlignment="Center">
                    </ToggleButton>
                    <ToggleButton x:Name="tgbSelectD" Content="D" Template="{StaticResource ToggleButtonVertical}" Margin="0,0,0,0" HorizontalAlignment="Right"  Foreground="White" Click="BoardSellect_Click"
                              VerticalContentAlignment="Center">
                    </ToggleButton>

                </StackPanel>

                <Image x:Name="cameraViewer" Margin="5,5" Grid.Row="1" Width="774" Height="435.375"/>

                <cc:VisionBuilder x:Name="VisionBuider" Grid.Column="0" Grid.Row="1" Margin="5" Width="774" Height="435.375">
                    <cc:VisionBuilder.Style>
                        <Style TargetType="cc:VisionBuilder">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=tgbSwitchCalib, Path=IsChecked}" Value="True">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=tgbSwitchCalib, Path=IsChecked}" Value="False">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </cc:VisionBuilder.Style>
                </cc:VisionBuilder>

                <Grid Grid.Row="1">
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=tgbSwitchCalib, Path=IsChecked}" Value="False">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=tgbSwitchCalib, Path=IsChecked}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Ellipse Width="200" Height="200" Stroke="Yellow"/>
                    <Border Width="1" HorizontalAlignment="Center" Background="Yellow"/>
                    <Border Height="1" VerticalAlignment="Center" Background="Yellow"/>
                </Grid>

                <cc:CameraSettingPanel x:Name="cameraSetting" AllowControl="False" Grid.Row="1"/>


            </Grid>
        </Border>

        <TabControl Background="#222222" Margin="0,3,5,5" BorderThickness="0" VerticalContentAlignment="Center" Grid.Column="1">
            <TabItem  Header="LCDs/FNDs" Foreground="White" Style="{StaticResource FlatTabControl}" Width="150" Height="40" Margin="0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Border x:Name="componentOptionHolder" Grid.Column="0"
                                Grid.Row="0" Background="#292929"
                                Margin="5" VerticalAlignment="Stretch"
                                HorizontalAlignment="Left" CornerRadius="10">
                    </Border>
                    <Border Grid.Column="1"
                                Grid.Row="0" Background="#292929"
                                Margin="5" VerticalAlignment="Stretch"
                                HorizontalAlignment="Stretch" CornerRadius="10">
                        <cc:FND_SegementBuilder x:Name="FND_lookupTable" VerticalAlignment="Stretch"/>
                    </Border>
                </Grid>
            </TabItem>
            <TabItem  Header="LEDs" Foreground="White" Style="{StaticResource FlatTabControl}" Width="150" Height="40" Margin="0">
                <Grid Margin="3,3,3,10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="180"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Label Content="LEDs Data" Grid.ColumnSpan="2" VerticalAlignment="Top" HorizontalAlignment="Stretch" Grid.Row="0"
                    Foreground="WhiteSmoke" FontWeight="Bold" FontSize="12" />
                    <DataGrid x:Name="LEDsData" Grid.Row="1" Grid.Column="1" Style="{StaticResource FlatDataGrid}" HorizontalScrollBarVisibility="Hidden" VerticalAlignment="Top"
                                                      IsEnabled="true" AutoGenerateColumns="False" CanUserAddRows="False" RowHeight="18" ColumnHeaderHeight="30"
                                                      ColumnHeaderStyle="{StaticResource FlatDataGridHeaderNomal}" HeadersVisibility="Column" GridLinesVisibility="All"
                                                      Margin="5" SelectionUnit="Cell" SelectedCellsChanged="LEDsData_SelectedCellsChanged" SelectionMode="Single">
                        <DataGrid.Resources>
                            <Style x:Key="LEDcell" TargetType="DataGridCell"  BasedOn="{StaticResource FlatDataGridCell}">
                                <Setter Property="Background" Value="#222222"/>
                                <Style.Triggers >
                                    <DataTrigger Binding="{Binding Use}" Value="False" >
                                        <Setter Property="Background" Value="#AF222222"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                            <Style x:Key="DataGridColumnHeaderCheckbox" TargetType="DataGridColumnHeader">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                            <Grid Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" >
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0"/>
                                                <CheckBox x:Name="waitCheckbox" Grid.Column="1" Foreground="White" Checked="waitCheckboxLED_Checked" Unchecked="waitCheckboxLED_Unchecked"
                                                              VerticalAlignment="Center" HorizontalAlignment="Center">
                                                </CheckBox>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Background" Value="#151515"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Height" Value="30"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                            </Style>

                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Index" IsReadOnly="True" CellStyle="{StaticResource LEDcell}" Binding="{Binding Path=Index}"
                                                                        Width="60"></DataGridTextColumn>

                            <DataGridTextColumn Header="X" Width="1*" CellStyle="{StaticResource   LEDcell}" Binding="{Binding Path=X}"></DataGridTextColumn>
                            <DataGridTextColumn Header="Y" Width="1*"  CellStyle="{StaticResource   LEDcell}"  Binding="{Binding Path=Y}"></DataGridTextColumn>
                            <DataGridTextColumn Header="Dir" Width="1*"  CellStyle="{StaticResource   LEDcell}"  Binding="{Binding Path=Dir}"></DataGridTextColumn>
                            <DataGridTextColumn Header="On" Width="1*" CellStyle="{StaticResource   LEDcell}"  Binding="{Binding Path=ON}"></DataGridTextColumn>
                            <DataGridTextColumn Header="OFF" Width="1*" CellStyle="{StaticResource   LEDcell}"  Binding="{Binding Path=OFF}"></DataGridTextColumn>
                            <DataGridTextColumn Header="Thresh" Width="1*" CellStyle="{StaticResource   LEDcell}"  Binding="{Binding Path=Thresh}"></DataGridTextColumn>
                            <DataGridTextColumn Header="Intens" Width="1*" IsReadOnly="True"  CellStyle="{StaticResource   LEDcell}"  Binding="{Binding Path=Intens}"></DataGridTextColumn>
                            <DataGridCheckBoxColumn Header="Use" Width="1*" HeaderStyle="{StaticResource DataGridColumnHeaderCheckbox}"  CellStyle="{StaticResource   LEDcell}" Binding="{Binding Path=Use, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></DataGridCheckBoxColumn>

                        </DataGrid.Columns>

                    </DataGrid>

                    <StackPanel Grid.Row="1" Margin="5">
                        <Label x:Name="lbLEDvalue" Content="" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"
                               FontWeight="Bold"/>
                        <Button x:Name="btGetValue" Content="GetValue" Click="btGetValue_Click"/>
                        <Button x:Name="btThresholdCalculate" Content="Threshold Calculate" Click="btThresholdCalculate_Click"/>
                    </StackPanel>

                </Grid>
            </TabItem>
            <TabItem  Header="GLEDs" Foreground="White" Style="{StaticResource FlatTabControl}" Width="150" Height="40" Margin="0">
                <Grid Margin="3,3,3,10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="180"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Label Content="GLEDs Data" VerticalAlignment="Top" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" Grid.Row="0"
                    Foreground="WhiteSmoke" FontWeight="Bold" FontSize="12" />
                    <DataGrid x:Name="GLEDsData" Grid.Row="1" Grid.Column="1" Style="{StaticResource FlatDataGrid}" HorizontalScrollBarVisibility="Hidden" VerticalAlignment="Top"
                                                      IsEnabled="true" AutoGenerateColumns="False" CanUserAddRows="False" RowHeight="18" ColumnHeaderHeight="30"
                                                      ColumnHeaderStyle="{StaticResource FlatDataGridHeaderNomal}" HeadersVisibility="Column" GridLinesVisibility="All"
                                                      Margin="5" SelectionUnit="Cell" SelectedCellsChanged="LEDsData_SelectedCellsChanged" SelectionMode="Single">
                        <DataGrid.Resources>
                            <Style x:Key="LEDcell" TargetType="DataGridCell" BasedOn="{StaticResource FlatDataGridCell}">
                                <Setter Property="Background" Value="#222222"/>
                                <Style.Triggers >
                                    <DataTrigger Binding="{Binding Use}" Value="False" >
                                        <Setter Property="Background" Value="#AF222222"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                            <Style x:Key="DataGridColumnHeaderCheckbox" TargetType="DataGridColumnHeader">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                            <Grid Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" >
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0"/>
                                                <CheckBox x:Name="waitCheckbox" Grid.Column="1" Foreground="White" Checked="waitCheckboxGLED_Checked" Unchecked="waitCheckboxGLED_Unchecked"
                                                              VerticalAlignment="Center" HorizontalAlignment="Center">

                                                </CheckBox>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Background" Value="#151515"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Height" Value="30"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                            </Style>

                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Index" CellStyle="{StaticResource LEDcell}" IsReadOnly="True" Binding="{Binding Path=Index}"
                                                                        Width="60"></DataGridTextColumn>

                            <DataGridTextColumn Header="X" Width="1*" CellStyle="{StaticResource  LEDcell}" Binding="{Binding Path=X}"></DataGridTextColumn>
                            <DataGridTextColumn Header="Y" Width="1*" CellStyle="{StaticResource  LEDcell}"  Binding="{Binding Path=Y}"></DataGridTextColumn>
                            <DataGridTextColumn Header="Width" Width="1*"  CellStyle="{StaticResource LEDcell}"  Binding="{Binding Path=Width}"></DataGridTextColumn>
                            <DataGridTextColumn Header="Height" Width="1*" CellStyle="{StaticResource LEDcell}"  Binding="{Binding Path=Height}"></DataGridTextColumn>
                            <DataGridTextColumn Header="On" Width="1*" CellStyle="{StaticResource  LEDcell}"  Binding="{Binding Path=ON}"></DataGridTextColumn>
                            <DataGridTextColumn Header="OFF" Width="1*" CellStyle="{StaticResource  LEDcell}"  Binding="{Binding Path=OFF}"></DataGridTextColumn>
                            <DataGridTextColumn Header="Thresh" Width="1*" CellStyle="{StaticResource  LEDcell}"  Binding="{Binding Path=Thresh}"></DataGridTextColumn>
                            <DataGridTextColumn Header="Intens" Width="1*" IsReadOnly="True"  CellStyle="{StaticResource  LEDcell}"  Binding="{Binding Path=Intens}"></DataGridTextColumn>
                            <DataGridCheckBoxColumn Header="Use" Width="1*"  HeaderStyle="{StaticResource DataGridColumnHeaderCheckbox}" CellStyle="{StaticResource  LEDcell}" Binding="{Binding Path=Use, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></DataGridCheckBoxColumn>

                        </DataGrid.Columns>

                    </DataGrid>
                    <StackPanel Grid.Row="1" Margin="5">
                        <Label x:Name="lbGLEDvalue" Content="" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"
                               FontWeight="Bold"/>
                        <Button x:Name="btGetGLEDValue" Content="GetValue" Click="btGetGLEDValue_Click"/>
                        <Button x:Name="btGLEDThresholdCalculate" Content="Threshold Calculate" Click="btGLEDThresholdCalculate_Click"/>
                    </StackPanel>
                </Grid>
            </TabItem>
        </TabControl>

        <StackPanel VerticalAlignment="Top" HorizontalAlignment="Right"
                    Margin="20,5" Orientation="Horizontal" Grid.Column="2" >

            <Label x:Name="lbModelName" Content="{Binding Name, UpdateSourceTrigger=PropertyChanged}" ContentStringFormat="MODEL: {0}" Margin="5,0,50,0" FontSize="12"
                       VerticalAlignment="Center" HorizontalAlignment="Center"
                       FontWeight="DemiBold" FontStyle="Italic" Foreground="WhiteSmoke"
                       Padding="0" Grid.Column="1"/>


            <Button x:Name="btOpenModel"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="Center"
                        Template="{DynamicResource ButtonControlNonHoverEffect}"
                        Height="30"  Width="120"
                        BorderThickness="0" 
                        Foreground="#FF109322" 
                        FontSize="14" 
                        Margin="0,5,0,5" 
                        Padding="5" 
                        Background="{x:Null}"
                        Click="btOpenModel_Click">

                <Grid HorizontalAlignment="Left" Margin="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="20"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Image Stretch="Uniform" Source="img/folder.png" Margin="2"/>
                    <Label Content="Open model" Margin="5,0,0,0" FontSize="12" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Foreground="WhiteSmoke" Padding="0" Grid.Column="1" FontStretch="UltraExpanded"/>
                </Grid>
            </Button>
            <Button x:Name="btSaveModel"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="Center"
                        Template="{DynamicResource ButtonControlNonHoverEffect}"
                        Height="30" Width="80"
                        BorderThickness="0" 
                        Foreground="#FF109322" 
                        FontSize="14" 
                        Margin="0,5,0,5" 
                        Padding="5" 
                        Background="{x:Null}"
                        Click="btSaveModel_Click">

                <Grid HorizontalAlignment="Left" Margin="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="20"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Image Stretch="Uniform" Source="img/save-folder.png" Margin="2"/>
                    <Label Content="Save" Margin="5,0,0,0" FontSize="12" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Foreground="WhiteSmoke" Padding="0" Grid.Column="1" FontStretch="UltraExpanded"/>
                </Grid>
            </Button>
            <Button x:Name="btSaveAsModel"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="Center"
                        Template="{DynamicResource ButtonControlNonHoverEffect}"
                        Height="30"  Width="80"
                        BorderThickness="0" 
                        Foreground="#FF109322" 
                        FontSize="14" 
                        Margin="0,5,0,5" 
                        Padding="5" 
                        Background="{x:Null}"
                        Click="btSaveAsModel_Click">

                <Grid HorizontalAlignment="Left" Margin="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="20"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Image Stretch="Uniform" Source="img/save-as.png" Margin="2"/>
                    <Label Content="Save As" Margin="5,0,0,0" FontSize="12" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Foreground="WhiteSmoke" Padding="0" Grid.Column="1" FontStretch="UltraExpanded"/>
                </Grid>
            </Button>
        </StackPanel>
        <Grid Grid.Row="1" Grid.ColumnSpan="2" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="300"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Border Background="#242424" Margin="5,0,5,0">
                <ctr:SolenoidControls x:Name="SolenoidControl"/>
            </Border>
            <Border Background="#242424" Margin="5,5,5,0" Grid.Row="1">
                <ctr:RelayControls x:Name="RelayControl"/>
            </Border>
            <Border Background="#242424" Margin="5,5,5,5" Grid.Row="2">
                <ctr:SYSIOcontrol x:Name="SystemControl" Margin="5"/>
            </Border>

            <Border Grid.Column="1" Grid.Row="0" Grid.RowSpan="3" Background="#292929" Margin="5,5,5,5"  CornerRadius="10">
                <Grid Margin="3,3,3,3">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>

                    <TabControl Grid.Row="2" Background="Black" Foreground="White" Margin="5,-30,5,5" BorderThickness="0">

                        <TabItem x:Name="UUT1Com" Style="{StaticResource FlatTabControl}" Header="UUT1" Foreground="White" Background="Black" >

                        </TabItem>
                        <TabItem x:Name="UUT2Com" Style="{StaticResource FlatTabControl}" Header="UUT2" Foreground="White" Background="Black" >

                        </TabItem>
                        <TabItem x:Name="UUT3Com" Style="{StaticResource FlatTabControl}" Header="UUT3" Foreground="White" Background="Black" >

                        </TabItem>
                        <TabItem x:Name="UUT4Com" Style="{StaticResource FlatTabControl}" Header="UUT4" Foreground="White" Background="Black" >

                        </TabItem>
                    </TabControl>
                    <Label Content="Communications Log" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0,0,5,0"
                       Foreground="WhiteSmoke" FontWeight="Bold" FontSize="12" />
                    <Label Content="TxDatas:" VerticalAlignment="Center"  Margin="240,5,200,5" Padding="0"
                       Foreground="WhiteSmoke" FontWeight="Bold" FontSize="12" />
                    <Label x:Name="lbTxData" Content="5A FD FC 12 12 35 33 25 ...." Grid.Row="1" VerticalAlignment="Top" Width="433" HorizontalAlignment="Right" Margin="294,5,6,0" Padding="0"
                       Foreground="WhiteSmoke" FontWeight="Bold" FontSize="12" />
                    <ComboBox x:Name="cbbTxnaming_Manual" Margin="0,5,160,5" Width="280" HorizontalAlignment="Right" SelectionChanged="cbbTxnaming_Mainual_SelectionChanged"></ComboBox>
                    <ComboBox x:Name="cbbUUTconfig_Manual" Margin="0,5,100,5" Width="50" HorizontalAlignment="Right" SelectedIndex="0">
                        <ComboBoxItem Content="P1"/>
                        <ComboBoxItem Content="P2"/>
                    </ComboBox>
                    <Button Template="{StaticResource ButtonControlNonHoverBackground}" Content="Send" Click="ButtonSendUUT_Click"
                            Width="50" Margin="5" Foreground="White" FontWeight="Bold"
                            Background="#212121" HorizontalAlignment="Right"/>
                </Grid>
            </Border>
            <Grid Grid.Column="3" Grid.RowSpan="3" Background="#232323" Margin="5">
                <Label Foreground="White" Content="Vistion Steps" FontWeight="DemiBold"/>
                <DataGrid x:Name="VisionStepsGrid" ItemsSource="{Binding Steps}" Margin="5,30,5,5" Style="{StaticResource FlatDataGrid}"
                          ColumnHeaderStyle="{StaticResource FlatDataGridHeaderNomal}" AutoGenerateColumns="False"  GridLinesVisibility="All">
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Setter Property="Height" Value="0"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CMD}" Value="FND">
                                    <Setter Property="Height" Value="18"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CMD}" Value="LCD">
                                    <Setter Property="Height" Value="18"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CMD}" Value="LED">
                                    <Setter Property="Height" Value="18"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CMD}" Value="GLED">
                                    <Setter Property="Height" Value="18"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding No}" Header="No" Width="0.3*" CellStyle="{StaticResource FlatVTMCellConstance}"  IsReadOnly="True"/>
                        <DataGridTextColumn Binding="{Binding TestContent}" Header="Content" Width="1*" CellStyle="{StaticResource FlatVTMCell}"/>
                        <DataGridTextColumn Binding="{Binding CMD}" Header="CMD" Width="0.3*" CellStyle="{StaticResource FlatVTMCellCMD}" IsReadOnly="True"/>
                        <DataGridTextColumn Binding="{Binding Oper}" Header="Condition1" Width="1*" CellStyle="{StaticResource VTMDataGridCellOper}"/>
                        <DataGridTextColumn Binding="{Binding Condition2}" Header="Oper" Width="1*" CellStyle="{StaticResource VTMDataGridCellCondition2}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </Grid>
        <Label x:Name="saveLabel" Grid.ColumnSpan="10" Grid.RowSpan="10" Content="Saved!" Foreground="White" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
               FontSize="50" FontWeight="Bold" Visibility="Hidden" Background="#AF000000"/>
    </Grid>
</Page>
