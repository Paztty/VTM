<UserControl x:Class="HVT.Controls.SYSIOcontrol"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:HVT.Controls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance Type=local:SystemMachineIO}">
    <UserControl.Resources>
        <ControlTemplate x:Key="ButtonControlNonHoverEffect" TargetType="{x:Type Button}">
            <Grid>
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True"
                            Cursor="Hand">
                    <ContentPresenter x:Name="contentPresenter" 
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              Content="{TemplateBinding Content}"
                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                              Focusable="False"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Cursor="Hand"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="{x:Null}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                    <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#4F808080"/>
                </Trigger>

                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="Gray"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>


            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="ToggleButton" TargetType="{x:Type ToggleButton}">
            <Border x:Name="border" CornerRadius="0" BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}"
                    Cursor="Hand">
                <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
                    <ContentPresenter x:Name="contentPresenter" 
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              Content="{TemplateBinding Content}"
                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                              Focusable="False"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    <Line x:Name="disableLine" X1="{Binding ElementName=contentPresenter, Path=Margin.Top}" Y1="0"
                          X2="{Binding ElementName=contentPresenter, Path=ActualWidth}" Y2="{Binding ElementName=contentPresenter, Path=ActualHeight}"
                          Stroke="White" StrokeThickness="2"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="White"/>
                    <Setter Property="BorderThickness" TargetName="border" Value="0,0,0,2"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="White"/>
                    <Setter Property="BorderThickness" TargetName="border" Value="0,0,0,3"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Visibility" TargetName="disableLine" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Visibility" TargetName="disableLine" Value="Hidden"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

    </UserControl.Resources>
    <Grid Margin="2" Background="Black">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.6*"/>
            <RowDefinition Height="0.6*"/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition Height="0.4*"/>
        </Grid.RowDefinitions>
        <ToggleButton Template="{StaticResource ToggleButton}" Background="DarkGreen" Content="DOWN" Click="ToggleButton_Click"
                FontSize="15"  Foreground="White" IsChecked="{Binding MainDOWN, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding NotEMC}"
                Grid.RowSpan="2" Margin="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>

        <ToggleButton Template="{StaticResource ToggleButton}" Background="DarkRed" Content="UP" Click="ToggleButton_Click"
                FontSize="15"  Foreground="White" IsChecked="{Binding MainUP, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding NotEMC}"
                Grid.RowSpan="2" Margin="2" Grid.Column="4" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>

        <ToggleButton Template="{StaticResource ToggleButton}"  Background="#212121" Content="TF" ToolTip="Top jig lock, top card insert" Click="ToggleButton_Click"
                  Foreground="White" IsChecked="{Binding Card_TOP_LOCK}" IsEnabled="{Binding NotEMC}"
                Grid.RowSpan="1" Margin="2" Grid.Column="1" />
        <ToggleButton Template="{StaticResource ToggleButton}"  Background="#212121" Content="BF" ToolTip="Bot jig lock, bot card insert" Click="ToggleButton_Click"
                  Foreground="White"  IsChecked="{Binding Card_BOT_LOCK}" IsEnabled="{Binding NotEMC}"
                Grid.RowSpan="1" Grid.Row="1" Margin="2" Grid.Column="1" />

        <ToggleButton Template="{StaticResource ToggleButton}"  Background="#212121" Content="TB" ToolTip="Top jig release, top card insert" Click="ToggleButton_Click"
                  Foreground="White"  IsChecked="{Binding JIG_TOP_LOCK}" IsEnabled="{Binding NotEMC}"
                Grid.RowSpan="1" Margin="2" Grid.Column="3" />
        <ToggleButton Template="{StaticResource ToggleButton}"  Background="#212121" Content="BB" ToolTip="Bot jig release, bot card insert" Click="ToggleButton_Click"
                  Foreground="White"   IsChecked="{Binding JIG_BOT_LOCK}" IsEnabled="{Binding NotEMC}"
                Grid.RowSpan="1" Grid.Row="1" Margin="2" Grid.Column="3" />

        <ToggleButton Content="EMC" FontSize="15"  FontWeight="Bold" IsEnabled="False"
                      Grid.Column="2" Grid.RowSpan="2" Margin="5" BorderThickness="0" IsChecked="{Binding SW_EMC}">
            <ToggleButton.Template>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" CornerRadius="0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <Grid>
                            <Label x:Name="contentPresenter" Cursor="Hand" Content="EMC"
                                   VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                   VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
                            <Label x:Name="mark" Cursor="Hand" Content="EMC" Foreground="Green"
                                   VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                   VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                   Background="{TemplateBinding Background}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Background" TargetName="border" Value="#212121"/>
                            <Setter Property="Visibility" TargetName="mark" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="border" Value="Black"/>
                            <Setter Property="Visibility" TargetName="mark" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#111111"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="ToggleButton.Checked">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:1" SpeedRatio="5" From="Yellow" To="Red"
                                                        AutoReverse="True" RepeatBehavior="Forever"
                                                        Storyboard.TargetName="contentPresenter"
                                                        Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)">
                                        </ColorAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </ToggleButton.Template>
        </ToggleButton>
        
        
        <Grid Grid.Row="2" Grid.ColumnSpan="5" Grid.RowSpan="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Label Content="Power A\C"   Foreground="White"
                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <ToggleButton Template="{StaticResource ToggleButton}"  Background="#212121" Content=" 110V " Click="ToggleButton_Click"
                  Foreground="White" IsChecked="{Binding AC110}" IsEnabled="{Binding NotEMC}"
                Grid.Row="1" Grid.Column="0" Margin="2"/>
            <ToggleButton Template="{StaticResource ToggleButton}"  Background="#212121" Content=" 220V " Click="ToggleButton_Click"
                  Foreground="White" IsChecked="{Binding AC220}" IsEnabled="{Binding NotEMC}"
                Grid.Row="2" Grid.Column="0" Margin="2"/>

            <Label Content="Power B\D"   Foreground="White" Grid.Column="1"
                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <ToggleButton Template="{StaticResource ToggleButton}"  Background="#212121" Content=" 110V " Click="ToggleButton_Click"
                  Foreground="White" IsChecked="{Binding BC110}" IsEnabled="{Binding NotEMC}"
                Grid.Row="1" Grid.Column="1" Margin="2"/>
            <ToggleButton Template="{StaticResource ToggleButton}"  Background="#212121" Content=" 220V " Click="ToggleButton_Click"
                  Foreground="White" IsChecked="{Binding BC220}" IsEnabled="{Binding NotEMC}"
                Grid.Row="2" Grid.Column="1" Margin="2"/>

            <ToggleButton Template="{StaticResource ToggleButton}"  Background="#212121" Content="DISCHARGE A\C" FontSize="10" Click="ToggleButton_Click"
                  Foreground="White" IsChecked="{Binding ADSC}" IsEnabled="{Binding NotEMC}"
                Grid.Row="3" Grid.Column="0" Margin="2"/>
            <ToggleButton Template="{StaticResource ToggleButton}"  Background="#212121" Content="DISCHAGRE B\D" FontSize="10" Click="ToggleButton_Click"
                  Foreground="White" IsChecked="{Binding BDSC}" IsEnabled="{Binding NotEMC}"
                Grid.Row="3" Grid.Column="1" Margin="2"/>

            <Grid Grid.Column="6" Grid.Row="0" Grid.RowSpan="4" HorizontalAlignment="Right">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Label Content="MIC A"  Margin="0,0,0,10" HorizontalAlignment="Left" VerticalAlignment="Bottom" Foreground="White"  RenderTransformOrigin="0.5,0.5" Height="30" Width="50">
                    <Label.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="-90"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Label.RenderTransform>
                </Label>
                <Label Content="MIC B"  Margin="0,0,0,10"  Foreground="White" VerticalAlignment="Bottom" HorizontalAlignment="Right" Grid.Column="2" RenderTransformOrigin="0.5,0.5" Height="30" Width="50">
                    <Label.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="-90"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Label.RenderTransform>
                </Label>

                <Border Grid.Column="0" Width="10" Padding="0" HorizontalAlignment="Right" Margin="0,5,0,0">
                    <Border.Background>
                        <LinearGradientBrush>
                            <GradientStop Color="Green" Offset="1.0"/>
                            <GradientStop Color="Red" Offset="0.0"/>
                        </LinearGradientBrush>
                    </Border.Background>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="{Binding MIC_A_PercentOff}"/>
                            <RowDefinition Height="{Binding MIC_A_PercentOn}"/>
                        </Grid.RowDefinitions>
                        <Label Background="Black" Content="0" Margin="-1,-1,-1,-1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"></Label>
                    </Grid>

                </Border>

                <Border Grid.Column="3" Width="10" Padding="0" HorizontalAlignment="Right" Margin="0,5,0,0">
                    <Border.Background>
                        <LinearGradientBrush>
                            <GradientStop Color="Green" Offset="1.0"/>
                            <GradientStop Color="Red" Offset="0.0"/>
                        </LinearGradientBrush>
                    </Border.Background>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="{Binding MIC_B_PercentOff}"/>
                            <RowDefinition Height="{Binding MIC_B_PercentOn}"/>
                        </Grid.RowDefinitions>
                        <Label Background="Black" Content="0" Margin="-1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"></Label>
                    </Grid>
                </Border>

            </Grid>

        </Grid>

    </Grid>
</UserControl>
